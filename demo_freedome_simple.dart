#!/usr/bin/env dart

import 'lib/services/freedome_api_stubs.dart';

/// –ü—Ä–æ—Å—Ç–∞—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è FreeDome API –∑–∞–≥–ª—É—à–µ–∫
Future<void> main() async {
  print('üåê =============================================');
  print('   FREEDOME SPHERE - SIMPLE INTEGRATION DEMO');
  print('   –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è API –∑–∞–≥–ª—É—à–µ–∫ FreeDome');
  print('üåê =============================================');
  print('');

  try {
    // 1. –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
    print('üîÑ –®–∞–≥ 1: –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ FreeDome...');

    final core = FreedomeCore();
    final calibration = FreedomeCalibration();
    final connectivity = FreedomeConnectivity();

    await core.initialize();
    await calibration.initialize();
    await connectivity.initialize();

    print('‚úÖ –í—Å–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω—ã');
    print('');

    // 2. –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ
    print('üîó –®–∞–≥ 2: –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ FreeDome —Å–∏—Å—Ç–µ–º–µ...');
    final connected = await connectivity.connect(
      serverUrl: 'localhost',
      port: 8080,
      options: {},
    );

    if (connected) {
      print('‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ');
    } else {
      print('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è');
      return;
    }
    print('');

    // 3. –ö–∞–ª–∏–±—Ä–æ–≤–∫–∞ –∞—É–¥–∏–æ
    print('üéµ –®–∞–≥ 3: –ö–∞–ª–∏–±—Ä–æ–≤–∫–∞ –∞—É–¥–∏–æ —Å–∏—Å—Ç–µ–º—ã...');
    final audioResult = await calibration.calibrateAudio();
    print('üìä –†–µ–∑—É–ª—å—Ç–∞—Ç –∫–∞–ª–∏–±—Ä–æ–≤–∫–∏ –∞—É–¥–∏–æ:');
    print('   –°—Ç–∞—Ç—É—Å: ${audioResult.status}');
    print('   –£—Å–ø–µ—Ö: ${audioResult.success ? "–î–∞" : "–ù–µ—Ç"}');
    if (audioResult.data != null) {
      print('   –£—Å—Ç—Ä–æ–π—Å—Ç–≤–∞: ${audioResult.data!['devices']}');
      print('   –ß–∞—Å—Ç–æ—Ç–∞ –¥–∏—Å–∫—Ä–µ—Ç–∏–∑–∞—Ü–∏–∏: ${audioResult.data!['sampleRate']} Hz');
      print('   –ö–∞–Ω–∞–ª—ã: ${audioResult.data!['channels']}');
      print('   –ó–∞–¥–µ—Ä–∂–∫–∞: ${audioResult.data!['latency']} –º—Å');
    }
    print('');

    // 4. –ö–∞–ª–∏–±—Ä–æ–≤–∫–∞ –≤–∏–¥–µ–æ
    print('üìπ –®–∞–≥ 4: –ö–∞–ª–∏–±—Ä–æ–≤–∫–∞ –≤–∏–¥–µ–æ —Å–∏—Å—Ç–µ–º—ã...');
    final videoResult = await calibration.calibrateVideo();
    print('üìä –†–µ–∑—É–ª—å—Ç–∞—Ç –∫–∞–ª–∏–±—Ä–æ–≤–∫–∏ –≤–∏–¥–µ–æ:');
    print('   –°—Ç–∞—Ç—É—Å: ${videoResult.status}');
    print('   –£—Å–ø–µ—Ö: ${videoResult.success ? "–î–∞" : "–ù–µ—Ç"}');
    if (videoResult.data != null) {
      print('   –†–∞–∑—Ä–µ—à–µ–Ω–∏–µ: ${videoResult.data!['resolution']}');
      print('   FPS: ${videoResult.data!['fps']}');
      print('   –ü—Ä–æ–µ–∫—Ü–∏—è: ${videoResult.data!['projection']}');
      print('   –Ø—Ä–∫–æ—Å—Ç—å: ${videoResult.data!['brightness']}');
      print('   –ö–æ–Ω—Ç—Ä–∞—Å—Ç–Ω–æ—Å—Ç—å: ${videoResult.data!['contrast']}');
    }
    print('');

    // 5. –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ —Å–∏—Å—Ç–µ–º—ã
    print('üìà –®–∞–≥ 5: –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ —Å–∏—Å—Ç–µ–º—ã...');
    final systemStatus = await core.getSystemStatus();
    print('üìä –°—Ç–∞—Ç—É—Å —Å–∏—Å—Ç–µ–º—ã:');
    print('   –†–∞–±–æ—Ç–∞–µ—Ç: ${systemStatus.isRunning ? "–î–∞" : "–ù–µ—Ç"}');
    print('   –ê–∫—Ç–∏–≤–Ω—ã–µ —Å–µ—Ä–≤–∏—Å—ã: ${systemStatus.activeServices.join(", ")}');
    print('   –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–∏—Å—Ç–µ–º–µ:');
    systemStatus.info.forEach((key, value) {
      print('     $key: $value');
    });
    print('');

    // 6. –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ —É—Å—Ç—Ä–æ–π—Å—Ç–≤
    print('üîå –®–∞–≥ 6: –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ —É—Å—Ç—Ä–æ–π—Å—Ç–≤...');
    final devices = await calibration.getAvailableDevices();
    print('üìä –î–æ—Å—Ç—É–ø–Ω—ã–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞:');
    for (final device in devices) {
      final status = device.isAvailable ? "‚úÖ –î–æ—Å—Ç—É–ø–Ω–æ" : "‚ùå –ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ";
      print('   $status ${device.name} (${device.type}) - ID: ${device.id}');
    }
    print('');

    // 7. –û—Ç–ø—Ä–∞–≤–∫–∞ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö
    print('üì§ –®–∞–≥ 7: –û—Ç–ø—Ä–∞–≤–∫–∞ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö...');
    final testData = {
      'type': 'demo',
      'timestamp': DateTime.now().toIso8601String(),
      'message': '–¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç FreeDome Sphere',
      'version': '1.0.0',
      'project': {
        'name': 'Demo Project',
        'scenes': ['scene1', 'scene2'],
        'audio': ['audio1.mp3'],
      },
    };

    await core.sendData(testData);
    print('‚úÖ –î–∞–Ω–Ω—ã–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ');
    print('   –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ:');
    testData.forEach((key, value) {
      print('     $key: $value');
    });
    print('');

    // 8. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–±—ã—Ç–∏–π –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
    print('üì° –®–∞–≥ 8: –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–±—ã—Ç–∏–π –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è...');
    connectivity.onConnectionStatusChanged.listen((status) {
      print('   üì° –°–æ–±—ã—Ç–∏–µ: –°—Ç–∞—Ç—É—Å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∏–∑–º–µ–Ω–∏–ª—Å—è –Ω–∞ ${status.name}');
    });

    // –°–∏–º—É–ª–∏—Ä—É–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞
    await Future.delayed(const Duration(milliseconds: 100));
    print('‚úÖ –°–ª—É—à–∞—Ç–µ–ª—å —Å–æ–±—ã—Ç–∏–π –ø–æ–¥–∫–ª—é—á–µ–Ω');
    print('');

    // 9. –û—Ç–∫–ª—é—á–µ–Ω–∏–µ
    print('üîå –®–∞–≥ 9: –û—Ç–∫–ª—é—á–µ–Ω–∏–µ –æ—Ç —Å–∏—Å—Ç–µ–º—ã...');
    await connectivity.disconnect();
    print('‚úÖ –û—Ç–∫–ª—é—á–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ');
    print('');

    // 10. –û—á–∏—Å—Ç–∫–∞ —Ä–µ—Å—É—Ä—Å–æ–≤
    print('üßπ –®–∞–≥ 10: –û—á–∏—Å—Ç–∫–∞ —Ä–µ—Å—É—Ä—Å–æ–≤...');
    connectivity.dispose();
    print('‚úÖ –†–µ—Å—É—Ä—Å—ã –æ—á–∏—â–µ–Ω—ã');
    print('');

    print('üéâ =============================================');
    print('   –î–ï–ú–û–ù–°–¢–†–ê–¶–ò–Ø –ó–ê–í–ï–†–®–ï–ù–ê –£–°–ü–ï–®–ù–û!');
    print('   –í—Å–µ API –∑–∞–≥–ª—É—à–∫–∏ FreeDome —Ä–∞–±–æ—Ç–∞—é—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ');
    print('   –°–∏—Å—Ç–µ–º–∞ –≥–æ—Ç–æ–≤–∞ –∫ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å —Ä–µ–∞–ª—å–Ω—ã–º–∏ –ø–∞–∫–µ—Ç–∞–º–∏');
    print('üéâ =============================================');
  } catch (e) {
    print('‚ùå –û—à–∏–±–∫–∞ –≤–æ –≤—Ä–µ–º—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏: $e');
    print('   Stack trace: ${StackTrace.current}');
  }
}
